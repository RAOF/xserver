From fe5802680b5ecf5ecef55b839f2f555882207d41 Mon Sep 17 00:00:00 2001
From: Bryce Harrington <bryce@canonical.com>
Date: Wed, 13 Feb 2013 11:39:34 -0800
Subject: [PATCH] If drm device couldn't be opened, keep trying for a sec.

The kernel returns EACCES or EAGAIN on drm open when the drm device is
currently unavailable, such as if it is in use by another process
(e.g. plymouth), or hasn't finished initializing (e.g. on a really fast
SSD).  Check for errors when trying to open the device, and continue
retrying for a short period before giving up.

Fixes: https://bugs.launchpad.net/ubuntu/+source/xorg-server/+bug/982889

Signed-off-by: Bryce Harrington <bryce@canonical.com>
---
 hw/xfree86/os-support/linux/lnx_platform.c |   29 +++++++++++++++++++++++++---
 1 file changed, 26 insertions(+), 3 deletions(-)

--- a/hw/xfree86/os-support/linux/lnx_platform.c
+++ b/hw/xfree86/os-support/linux/lnx_platform.c
@@ -7,6 +7,7 @@
 #include <xf86drm.h>
 #include <fcntl.h>
 #include <unistd.h>
+#include <errno.h>
 
 /* Linux platform device support */
 #include "xf86_OSproc.h"
@@ -17,23 +18,54 @@
 
 #include "hotplug.h"
 
+static Bool get_drm_master(int fd)
+{
+    int ret, tries = 400;
+
+    LogMessage(X_INFO, "spinning!\n");
+
+    while (tries--) {
+        if (drmSetMaster(fd) >= 0)
+            return TRUE;
+
+        if (errno != EINVAL)
+            break;
+
+        usleep(10000);
+    }
+    return FALSE;
+}
+
 static Bool
 get_drm_info(struct OdevAttributes *attribs, char *path)
 {
     drmSetVersion sv;
     char *buf;
     int fd;
+    int err = 0;
 
     fd = open(path, O_RDWR, O_CLOEXEC);
     if (fd == -1)
         return FALSE;
 
-    sv.drm_di_major = 1;
-    sv.drm_di_minor = 4;
-    sv.drm_dd_major = -1;       /* Don't care */
-    sv.drm_dd_minor = -1;       /* Don't care */
-    if (drmSetInterfaceVersion(fd, &sv)) {
-        ErrorF("setversion 1.4 failed\n");
+    while (1) {
+        sv.drm_di_major = 1;
+        sv.drm_di_minor = 4;
+        sv.drm_dd_major = -1;       /* Don't care */
+        sv.drm_dd_minor = -1;       /* Don't care */
+
+        err = drmSetInterfaceVersion(fd, &sv);
+        if (!err)
+            break;
+
+        if (err == -EACCES) {
+            if (get_drm_master(fd))
+                continue;
+            ErrorF("drmSetMaster failed with -%i(%m)\n", errno);
+        } else
+            ErrorF("drmSetInterfaceVersion failed with %i(%s)\n", err, strerror(-err));
+
+        close(fd);
         return FALSE;
     }
 
